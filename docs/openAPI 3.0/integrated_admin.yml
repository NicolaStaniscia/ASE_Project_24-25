openapi: 3.0.0

info:
  title: Admin API Gateway
  description: All operations related to admins

servers:
  - url: https://localhost:8081
    description: Admin API Gateway

tags:
  - name: Account management
    description: Manage own account
  - name: See gacha collection
    description: Visualize gacha
  - name: Edit gacha collection
    description: Edit gacha of users collection and system gacha
  - name: Auction market
    description: Gacha market

paths:

  /account_management/admin/login:
    post:
      tags:
        - Account management
      summary: Admin login
      description: Allows admin users to log in and obtain a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username of the admin user.
                  example: admin1
                password:
                  type: string
                  description: The password of the admin user.
                  example: admin1
      responses:
        '200':
          description: Login successful. Returns a JWT token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: JWT token for the admin user.
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  status:
                    type: string
                    description: Login status message.
                    example: "Login completed successfully"
        '400':
          description: Missing username or password in the request body.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "username and password are required"
        '401':
          description: Invalid credentials.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid credentials"
        '500':
          description: Failed to connect to the DB Manager or database error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to connect to DB Manager"
                  details:
                    type: string
                    description: Additional information about the failure.
                    example: "Connection refused"

  /account_management/admin/view_users:
    get:
      tags:
        - Account management
      summary: View information of a specific user or of all users.
      description: Allows admin users to view information about all users or a specific user based on the 'username' query parameter.
      security:
        - BearerAuth: []
      parameters:
        - name: username
          in: query
          description: Username of the specific user to view. If omitted, information for all users will be returned.
          required: false
          schema:
            type: string
            example: user1
      responses:
        '200':
          description: User(s) information retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    description: Information about the requested user(s).
                    example:
                      - id: 1
                        username: "user1"
                        salt: "4af79f16b117297d10e75e3ce76fe6bb"
                        password: "703056994df0c5cbe3c3c4d030092260850e8f8f9d6c357a8a27e44919e248d0"
                        in_game_currency: 1050
                        last_access: "Tue, 03 Dec 2024 15:20:39 GMT"
                      - id: 2
                        username: user2
                        salt: "b6da0fe797c9cd5c0936fb8b12c11aa3"
                        password: "5775f528a5bed1562ed5c7d40ba9e3c59dd31f148c5f58cff3dffebec07d1ede"
                        in_game_currency: 440
                        last_access: "Tue, 03 Dec 2024 15:20:39 GMT"
        '401':
          description: Invalid or missing JWT token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Missing or invalid token"
        '403':
          description: Unauthorized access attempt.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '404':
          description: User not found (when querying a specific user).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User not found!"
        '500':
          description: Failed to connect to the DB Manager or database error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to connect to DB Manager"
                  details:
                    type: string
                    description: Additional information about the failure.
                    example: "Connection refused"

  /account_management/admin/modify_user:
    patch:
      tags:
        - Account management
      summary: Modify a user's in-game currency
      description: Allows admin to modify a user's in-game currency.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username of the user whose in-game currency will be modified.
                  example: user1
                new_currency:
                  type: integer
                  description: The new amount of in-game currency to set for the user.
                  example: 1000
      responses:
        '200':
          description: Currency successfully updated for the user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    description: Response from the DB Manager confirming the update.
                    example: { "message": "User:user1. Currency modified successfully, new currency: 1000." }
        '400':
          description: Missing or invalid parameters in the request body.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "username and new_currency are required or 'new_currency' must be an integer"
        '401':
          description: Invalid or missing JWT token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Missing or invalid token"
        '403':
          description: Unauthorized access attempt.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '500':
          description: Server or DB Manager error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to connect to DB Manager"
                  details:
                    type: string
                    description: Additional information about the failure.
                    example: "Connection refused"

  /account_management/admin/check_payments_history/{username}:
    get:
      tags:
        - Account management
      summary: Check a user's payments history
      description: Allows an admin to view the payment history of a specified user.
      security:
        - BearerAuth: []
      parameters:
        - name: username 
          in: path
          required: true
          description: The username of the user whose payment history is to be retrieved.
          schema:
            type: string
            example: user123
      responses:
        '200':
          description: Payment history retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    transaction_id:
                      type: integer
                      description: The unique ID of the payment transaction.
                      example: 123
                    user_id:
                      type: integer
                      description: The unique ID of the user who made the payment.
                      example: 1
                    amount_spent:
                      type: integer
                      description: The amount spent in the transaction.
                      example: 20
                    in_game_currency_purchased:
                      type: integer
                      description: The amount of in-game currency purchased in the transaction.
                      example: 450
                    timestamp:
                      type: string
                      format: date-time
                      description: The timestamp of the transaction.
                      example: "Tue, 03 Dec 2024 15:20:39 GMT"
        '400':
          description: Username is missing in the request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Username is required"
        '401':
          description: Invalid or missing JWT token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Missing or invalid token"
        '403':
          description: Unauthorized access attempt.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '404':
          description: User not found or no transactions found for the user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User user123 not found."
                  message:
                    type: string
                    example: "No transactions found for user user123. or User user123 not found."
        '500':
          description: Server or DB Manager error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to connect to DB Manager"
                  details:
                    type: string
                    description: Additional information about the failure.
                    example: "Connection refused"

  /admin/collections:
    get:
      tags:
        - See gacha collection
      summary: Recupera tutte le collezioni gacha degli utenti.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Collezioni recuperate con successo.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    gachas:
                      type: array
                      description: Elenco degli oggetti gacha posseduti dall'utente.
                      items:
                        type: object
                        properties:
                          gachaId:
                            type: integer
                            description: ID del gacha.
                          idOwn:
                            type: integer
                            description: ID univoco della proprietà del gacha.
                          image:
                            type: string
                            format: uri
                            description: URL dell'immagine del gacha.
                          name:
                            type: string
                            description: Nome del gacha.
                          rarity:
                            type: string
                            description: Rarità del gacha.
                    user_id:
                      type: integer
                      description: ID dell'utente.
                    username:
                      type: string
                      description: Username dell'utente
        '401':
          description: Campo "Authorization" mancante
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Missing Authorization Header"
        '403':
          description: Accesso negato. Solo gli amministratori possono accedere a questo endpoint.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Forbidden"
        '500':
          description: Errore interno del server o problemi durante il recupero dei dati.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to retrieve users collection"

  /admin/collections/{user_id}:
    get:
      tags:
        - See gacha collection
      summary: Recupera la collezione gacha di un utente specifico.
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Collezione recuperata con successo.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    gachaId:
                      type: integer
                      description: ID del gacha.
                    idOwn:
                      type: integer
                      description: ID univoco della proprietà del gacha.
                    image:
                      type: string
                      format: uri
                      description: URL dell'immagine del gacha.
                    name:
                      type: string
                      description: Nome del gacha.
                    rarity:
                      type: string
                      description: Rarità del gacha.
        '401':
          description: Campo "Authorization" mancante
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Missing Authorization Header"
        '403':
          description: Accesso negato. Solo gli amministratori possono accedere a questo endpoint.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Forbidden"
        '404':
          description: Utente non trovato.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User (id: <user_id>) not found"
        '500':
          description: Errore interno del server o problemi durante il recupero dei dati.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /system_collection:
    get:
      tags:
        - See gacha collection
      summary: Recupera la collezione di gacha di sistema
      description: Restituisce una lista di tutti i gacha disponibili nel sistema.
      responses:
        '200':
          description: Collezione di sistema recuperata con successo
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    extractionProb:
                      type: number
                      format: float
                    id:
                      type: integer
                    image:
                      type: string
                      format: uri
                    name:
                      type: string
                    rarity:
                      type: string
        '500':
          description: Errore interno del server o richiesta fallita
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"

  /system_collection/{gacha_id}:
    get:
      tags:
        - See gacha collection
      summary: Recupera i dettagli di un gacha specifico
      parameters:
        - name: gacha_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Dettagli del gacha recuperati con successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  accuracy:
                    type: integer
                  critical:
                    type: number
                    format: float
                  damage:
                    type: integer
                  extractionProb:
                    type: number
                    format: float
                  id:
                    type: integer
                  image:
                    type: string
                    format: uri
                  name:
                    type: string
                  rarity:
                    type: string
                  speed:
                    type: integer
        '404':
          description: Gacha non trovato
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Gacha not found"
        '500':
          description: Errore interno del server o richiesta fallita
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"

  /admin/edit/collection:
    post:
      tags:
        - Edit gacha collection
      summary: Aggiunge un gacha alla collezione di un utente.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: ['user_id', 'gacha_id']
              properties:
                user_id:
                  type: integer
                  description: ID dell'utente a cui aggiungere il gacha.
                gacha_id:
                  type: integer
                  description: ID del gacha da aggiungere.
      responses:
        '200':
          description: Gacha added to collection
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
        '400':
          description: Richiesta malformata. user_id e gacha_id obbligatori
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Bad request"
        '401':
          description: Campo 'Authorization' mancante 
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Missing Authorization Header"
        '403':
          description: Accesso negato. Solo gli amministratori possono accedere a questo endpoint.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied"
        '500':
          description: Errore interno del server o problemi durante il recupero dei dati.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    patch:
      tags:
        - Edit gacha collection
      summary: Modifica un oggetto gacha nella collezione di un utente.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: ['id']
              minProperties: 2 
              properties:
                id:
                  type: integer
                  description: ID unico della proprietà del gacha.
                user_id:
                  type: integer
                  description: ID dell'utente a cui appartiene il gacha.
                gacha_id:
                  type: integer
                  description: ID del gacha da aggiornare.
                in_auction:
                  type: boolean
                  description: Stato dell'oggetto gacha nell'asta.
      responses:
        '200':
          description: Gacha updated to collection
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
        '400':
          description: Richiesta malformata. id obbligatorio
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Bad request"
        '401':
          description: Campo 'Authorization' mancante 
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Missing Authorization Header"
        '403':
          description: Accesso negato. Solo gli amministratori possono accedere a questo endpoint.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied"
        '500':
          description: Errore interno del server o problemi durante il recupero dei dati.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /admin/edit/collection/{id_own}:
    delete:
      tags:
        - Edit gacha collection
      summary: Rimuove un oggetto gacha dalla collezione di un utente.
      parameters:
        - name: id_own
          in: path
          required: true
          description: ID unico della proprietà del gacha da rimuovere.
          schema:
            type: integer
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Gacha deleted from collection
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
        '400':
          description: Richiesta malformata. id_own obbligatorio 
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Bad request"
        '401':
          description: Campo 'Authorization' mancante 
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Missing Authorization Header"
        '403':
          description: Accesso negato. Solo gli amministratori possono accedere a questo endpoint.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied"
        '500':
          description: Errore interno del server o problemi durante il recupero dei dati.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /admin/edit/gacha:
    post:
      tags:
        - Edit gacha collection
      summary: Aggiunge o modifica oggetti gacha nel sistema.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  required: ["name", "extractionProb", "rarity", "image", "damage", "speed", "critical", "accuracy"]
                  properties:
                    name:
                      type: string
                      description: Nome del gacha.
                    extractionProb:
                      type: number
                      format: float
                      description: Probabilità di estrazione del gacha.
                    rarity:
                      type: string
                      description: Rarità del gacha.
                    image:
                      type: string
                      format: uri
                      description: URL dell'immagine del gacha.
                    damage:
                      type: integer
                      description: Valore di danno del gacha.
                    speed:
                      type: integer
                      description: Velocità del gacha.
                    critical:
                      type: number
                      format: float
                      description: Valore critico del gacha.
                    accuracy:
                      type: integer
                      description: Valore di precisione del gacha.
                - type: array
                  items:
                    type: object
                    required: ["name", "extractionProb", "rarity", "image", "damage", "speed", "critical", "accuracy"]
                    properties:
                      name:
                        type: string
                        description: Nome del gacha.
                      extractionProb:
                        type: number
                        format: float
                        description: Probabilità di estrazione del gacha.
                      rarity:
                        type: string
                        description: Rarità del gacha.
                      image:
                        type: string
                        format: uri
                        description: URL dell'immagine del gacha.
                      damage:
                        type: integer
                        description: Valore di danno del gacha.
                      speed:
                        type: integer
                        description: Velocità del gacha.
                      critical:
                        type: number
                        format: float
                        description: Valore critico del gacha.
                      accuracy:
                        type: integer
                        description: Valore di precisione del gacha.
      responses:
        '200':
          description: Gacha(s) added
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
        '400':
          description: Richiesta malformati. Tutti i campi sono obbligatori
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Bad request"
        '401':
          description: Campo "Authorization" mancante
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Missing Authorization Header"
        '403':
          description: Accesso negato. Solo gli amministratori possono accedere a questo endpoint.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied"
        '500':
          description: Errore interno del server o problemi durante il recupero dei dati.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    patch:
      tags:
        - Edit gacha collection
      summary: Modifica le informazioni di un oggetto gacha specifico.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: ['id']
              minProperties: 2 
              properties:
                id:
                  type: integer
                  description: Identificativo unico del gacha.
                name:
                  type: string
                  description: Nome del gacha.
                extractionProb:
                  type: number
                  format: float
                  description: Probabilità di estrazione del gacha.
                image:
                  type: string
                  format: uri
                  description: URL dell'immagine del gacha.
                rarity:
                  type: string
                  description: Rarity level
                damage:
                  type: integer
                  description: Valore di danno del gacha.
                speed:
                  type: integer
                  description: Velocità del gacha.
                critical:
                  type: number
                  format: float
                  description: Valore critico del gacha.
                accuracy:
                  type: integer
                  description: Valore di precisione del gacha.
      responses:
        '200':
          description: Gacha updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
        '400':
          description: Richiesta malformati. id obbligatorio
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Bad request"
        '401':
          description: Campo "Authorization" mancante
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Missing Authorization Header"
        '403':
          description: Accesso negato. Solo gli amministratori possono accedere a questo endpoint.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied"
        '500':
          description: Errore interno del server o problemi durante l'elaborazione della richiesta.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /admin/edit/gacha/{gacha_id}:
    delete:
      tags:
        - Edit gacha collection
      summary: Elimina un oggetto gacha specifico.
      security:
        - BearerAuth: []
      parameters:
        - name: gacha_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Gacha deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
        '400':
          description: Richiesta malformati. gacha_id obbligatorio
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Gacha ID missing"
        '401':
          description: Campo "Authorization" mancante
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Missing Authorization Header"
        '403':
          description: Accesso negato. Solo gli amministratori possono accedere a questo endpoint.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied"
        '500':
          description: Errore interno del server o problemi durante l'elaborazione della richiesta.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Request failed: <dettagli dell'errore>"

  /auction_market/admin/market:
    get:
      tags:
        - Auction market
      summary: Recupera le aste attive (admin)
      description: Ottiene l'elenco delle aste attualmente attive. Accessibile solo agli amministratori.
      security:
        - BearerAuth: []
      responses:
        200:
          description: Elenco delle aste attive recuperato con successo
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: ID dell'asta
                    gacha_id:
                      type: integer
                      description: ID del gacha associato
                    seller_id:
                      type: integer
                      description: ID del venditore
                    starting_price:
                      type: integer
                      description: Prezzo iniziale dell'asta
                    current_price:
                      type: integer
                      description: Prezzo corrente dell'asta
                    auction_end:
                      type: string
                      format: date-time
                      description: Data e ora di fine dell'asta
                    status:
                      type: string
                      enum: [active, closed, canceled, suspended]
                      description: Stato dell'asta
        403:
          description: Privilegi amministrativi richiesti
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Admin privileges required
        401:
          description: Utente non autenticato
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Missing Authorization Header
        500:
          description: Errore interno del server
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Errore durante la comunicazione con il DBM."
  
  /auction_market/admin/market/specific_auction:
    get:
      tags:
        - Auction market
      summary: Recupera i dettagli di un'asta specifica (admin)
      description: Ottiene i dettagli di un'asta specifica identificata dal suo ID. Accessibile solo agli amministratori.
      parameters:
        - name: auctionID
          in: query
          required: true
          description: L'ID dell'asta da recuperare.
          schema:
            type: integer
      security:
        - BearerAuth: []
      responses:
        200:
          description: Dettagli dell'asta recuperati con successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: ID dell'asta
                  gacha_id:
                    type: integer
                    description: ID del gacha associato
                  seller_id:
                    type: integer
                    description: ID del venditore
                  starting_price:
                    type: integer
                    description: Prezzo iniziale dell'asta
                  current_price:
                    type: integer
                    description: Prezzo corrente dell'asta
                  auction_end:
                    type: string
                    format: date-time
                    description: Data e ora di fine dell'asta
                  status:
                    type: string
                    enum: [active, closed, canceled, suspended]
                    description: Stato dell'asta
        400:
          description: Richiesta malformata (ID dell'asta non fornito)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "ID dell'asta non fornito"
        401:
          description: Utente non autenticato
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Missing Authorization Header"
        403:
          description: Privilegi amministrativi richiesti
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Admin privileges required"
        404:
          description: Asta non trovata
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Auction not found"
        500:
          description: Errore interno del server
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error communicating with DBM: [dettagli errore]"

    patch:
      tags:
        - Auction market
      summary: Modifica lo stato di un'asta specifica (admin)
      description: Consente agli amministratori di aggiornare lo stato di un'asta specifica.
      parameters:
        - name: auctionID
          in: query
          required: true
          description: L'ID dell'asta da modificare.
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [canceled, closed, active, suspended]
                  description: Nuovo stato dell'asta.
              required:
                - status
      security:
        - BearerAuth: []
      responses:
        200:
          description: Stato dell'asta aggiornato con successo.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Auction status updated successfully"
        400:
          description: Richiesta malformata (ID o stato non valido)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Valid auctionID is required"
        401:
          description: Utente non autenticato
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Missing Authorization Header"
        403:
          description: Privilegi amministrativi richiesti
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Admin privileges required"
        404:
          description: Asta non trovata
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Auction not found"
        500:
          description: Errore interno del server
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error communicating with DBM: [dettagli errore]"

    delete:
      tags:
        - Auction market
      summary: Elimina un'asta specifica (admin)
      description: Consente agli amministratori di eliminare un'asta specifica.
      parameters:
        - name: auctionID
          in: query
          required: true
          description: L'ID dell'asta da eliminare.
          schema:
            type: integer
      security:
        - BearerAuth: []
      responses:
        200:
          description: Asta eliminata con successo.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Auction deleted successfully"
        400:
          description: Richiesta malformata (ID non valido).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Valid auctionID is required"
        401:
          description: Utente non autenticato.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Missing Authorization Header"
        403:
          description: Privilegi amministrativi richiesti.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Admin privileges required"
        404:
          description: Asta non trovata.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Auction not found"
        500:
          description: Errore interno del server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error communicating with DBM: [dettagli errore]"
            
  /auction_market/admin/market/history:
    get:
      tags:
        - Auction market
      summary: Recupera lo storico delle aste (admin)
      description: Consente agli amministratori di visualizzare lo storico delle aste.
      security:
        - BearerAuth: []
      responses:
        200:
          description: Storico delle aste recuperato con successo.
          content:
            application/json:
              schema:
                type: object
                properties:
                  market_history:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 123
                        gacha_id:
                          type: integer
                          example: 456
                        seller_id:
                          type: integer
                          example: 789
                        starting_price:
                          type: integer
                          example: 100
                        current_price:
                          type: integer
                          example: 200
                        auction_end:
                          type: string
                          format: date-time
                          example: "2024-01-01T12:00:00Z"
                        status:
                          type: string
                          enum: ["active", "closed", "canceled", "suspended"]
                          example: "closed"
        401:
          description: Utente non autenticato.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Missing Authorization Header"
        403:
          description: Privilegi amministrativi richiesti.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Admin privileges required"
        500:
          description: Errore interno del server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error communicating with DBM: [dettagli errore]"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
