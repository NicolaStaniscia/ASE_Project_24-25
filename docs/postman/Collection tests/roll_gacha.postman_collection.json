{
	"info": {
		"_postman_id": "066bf726-4e06-46cd-be8e-ca3ab60639c3",
		"name": "GACHA - Roll gacha",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39662462"
	},
	"item": [
		{
			"name": "roll_standard",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"user_id = Math.floor(Math.random() * 10) + 1;\r",
							"iat = Math.floor(Date.now() / 1000);\r",
							"\r",
							"pm.environment.set('user_id', user_id.toString());  \r",
							"pm.environment.set('iat', iat);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be JSON\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response header should contains Authorization field\", function() {\r",
							"    pm.request.to.have.header('Authorization');\r",
							"});\r",
							"\r",
							"pm.test(\"Response fields\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property(\"success\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "jwt",
					"jwt": [
						{
							"key": "payload",
							"value": "{\r\n    \"sub\": \"{{user_id}}\",\r\n    \"role\": \"user\",\r\n    \"iat\": {{iat}}\r\n}",
							"type": "string"
						},
						{
							"key": "header",
							"value": "{\r\n  \"alg\": \"HS256\",\r\n  \"typ\": \"JWT\"\r\n}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "secret",
							"value": "JwtGACHA2425",
							"type": "string"
						},
						{
							"key": "algorithm",
							"value": "HS256",
							"type": "string"
						},
						{
							"key": "isSecretBase64Encoded",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "headerPrefix",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "queryParamKey",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:5009/roll/standard",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5009",
					"path": [
						"roll",
						"standard"
					]
				}
			},
			"response": []
		},
		{
			"name": "roll_gold",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"user_id = Math.floor(Math.random() * 10) + 1;\r",
							"iat = Math.floor(Date.now() / 1000);\r",
							"\r",
							"pm.environment.set('user_id', user_id.toString());\r",
							"pm.environment.set('iat', iat);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be JSON\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response header should contains Authorization field\", function() {\r",
							"    pm.request.to.have.header('Authorization');\r",
							"});\r",
							"\r",
							"pm.test(\"Response fields\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property(\"success\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "jwt",
					"jwt": [
						{
							"key": "payload",
							"value": "{\r\n    \"sub\": \"{{user_id}}\",\r\n    \"role\": \"user\",\r\n    \"iat\": {{iat}}\r\n}",
							"type": "string"
						},
						{
							"key": "header",
							"value": "{\r\n  \"alg\": \"HS256\",\r\n  \"typ\": \"JWT\"\r\n}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "secret",
							"value": "JwtGACHA2425",
							"type": "string"
						},
						{
							"key": "algorithm",
							"value": "HS256",
							"type": "string"
						},
						{
							"key": "isSecretBase64Encoded",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "headerPrefix",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "queryParamKey",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:5009/roll/gold",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5009",
					"path": [
						"roll",
						"gold"
					]
				}
			},
			"response": []
		},
		{
			"name": "roll_platinum",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"user_id = Math.floor(Math.random() * 10) + 1;\r",
							"iat = Math.floor(Date.now() / 1000);\r",
							"\r",
							"pm.environment.set('user_id', user_id.toString());\r",
							"pm.environment.set('iat', iat);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be JSON\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response header should contains Authorization field\", function() {\r",
							"    pm.request.to.have.header('Authorization');\r",
							"});\r",
							"\r",
							"pm.test(\"Response fields\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property(\"success\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "jwt",
					"jwt": [
						{
							"key": "payload",
							"value": "{\r\n    \"sub\": \"{{user_id}}\",\r\n    \"role\": \"user\",\r\n    \"iat\": {{iat}}\r\n}",
							"type": "string"
						},
						{
							"key": "header",
							"value": "{\r\n  \"alg\": \"HS256\",\r\n  \"typ\": \"JWT\"\r\n}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "secret",
							"value": "JwtGACHA2425",
							"type": "string"
						},
						{
							"key": "algorithm",
							"value": "HS256",
							"type": "string"
						},
						{
							"key": "isSecretBase64Encoded",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "headerPrefix",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "queryParamKey",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://localhost:5009/roll/platinum",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5009",
					"path": [
						"roll",
						"platinum"
					]
				}
			},
			"response": []
		}
	]
}