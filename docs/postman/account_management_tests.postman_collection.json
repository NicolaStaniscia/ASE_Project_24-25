{
	"info": {
		"_postman_id": "0eeeb524-d6d6-48cd-a9ff-9e9cd9b617e1",
		"name": "account_management_tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39662462"
	},
	"item": [
		{
			"name": "POST /account_management/create_user_account 201 CREATED",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"user1\",\r\n    \"password\":\"user1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8080/account_management/create_user_account",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"account_management",
						"create_user_account"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /account_management/login 201 CREATED",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"user1\",\r\n    \"password\":\"user1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8080/account_management/login",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"account_management",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /account_management/admin/login 200 OK",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"admin1\",\r\n    \"password\":\"admin1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8081/account_management/admin/login",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"account_management",
						"admin",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /account_management/admin/view_users 200 OK Copy",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTczMjI5MjA3MiwianRpIjoiYzdkYWE1MGQtNzU3Zi00NGNiLTkzOWEtNzhkNGUzNWRjNjVmIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6Ik5vbmUiLCJuYmYiOjE3MzIyOTIwNzIsImNzcmYiOiJhNGVlNTcyOS0wNTQxLTQwNzMtOTFkZi1kMDRjZWQ1Y2FhZDkiLCJleHAiOjE3MzIyOTU2NzIsInVzZXJuYW1lIjoidXNlcjEwIiwicm9sZSI6InVzZXIifQ.WoyMCh2y6AI75zF9B2XKTp9aXHflACZyn3Gw9DtMAGg",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:8081/account_management/admin/view_users",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"account_management",
						"admin",
						"view_users"
					],
					"query": [
						{
							"key": "username",
							"value": "user1",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /account_management/get_currency 200 OK",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTczMjI5MjA3MiwianRpIjoiYzdkYWE1MGQtNzU3Zi00NGNiLTkzOWEtNzhkNGUzNWRjNjVmIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6Ik5vbmUiLCJuYmYiOjE3MzIyOTIwNzIsImNzcmYiOiJhNGVlNTcyOS0wNTQxLTQwNzMtOTFkZi1kMDRjZWQ1Y2FhZDkiLCJleHAiOjE3MzIyOTU2NzIsInVzZXJuYW1lIjoidXNlcjEwIiwicm9sZSI6InVzZXIifQ.WoyMCh2y6AI75zF9B2XKTp9aXHflACZyn3Gw9DtMAGg",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:8081/account_management/admin/view_users",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"account_management",
						"admin",
						"view_users"
					],
					"query": [
						{
							"key": "username",
							"value": "user1",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /account_management/admin/check_payments_history 200 OK",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTczMjI5NTQ1NCwianRpIjoiMmI2NTg4MjMtYTc1ZC00ZjNhLWE5NTEtYjBkMzI5YWI3MzFhIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6Ik5vbmUiLCJuYmYiOjE3MzIyOTU0NTQsImNzcmYiOiIyOTZkOTc3Ny1jZTFiLTQ1MjMtYjU0Yi0xY2MxYWQ5M2MxNDAiLCJleHAiOjE3MzIyOTkwNTQsInVzZXJuYW1lIjoiYWRtaW4xIiwicm9sZSI6ImFkbWluIn0.0YPj-hQn829fCe0gfeInexQmx1XjazzFXeV08IrIs4Q",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:8081/account_management/admin/check_payments_history/user1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"account_management",
						"admin",
						"check_payments_history",
						"user1"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /account_management/buy_in_game_currency 201 CREATED",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTczMjI5NDUxNCwianRpIjoiZWFhZTJiZDctZTVjNi00ZTlhLWJjYzMtYzliZjNhZDljYzZmIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6Ik5vbmUiLCJuYmYiOjE3MzIyOTQ1MTQsImNzcmYiOiJkMTE4MTcyNS02M2UzLTQ2OTktYTVlNy0yNjNkZjI5Yzc0MDQiLCJleHAiOjE3MzIyOTgxMTQsInVzZXJuYW1lIjoidXNlcjEiLCJyb2xlIjoidXNlciJ9.Mahetc-T8iJ83H2AND1W2OGQRvLvOL6Nb1n-fwYk9SQ",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"user1\",\r\n    \"pack\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8080/account_management/buy_in_game_currency",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"account_management",
						"buy_in_game_currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE /account_management/delete_user_account 200 OK",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTczMjI5MjA3MiwianRpIjoiYzdkYWE1MGQtNzU3Zi00NGNiLTkzOWEtNzhkNGUzNWRjNjVmIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6Ik5vbmUiLCJuYmYiOjE3MzIyOTIwNzIsImNzcmYiOiJhNGVlNTcyOS0wNTQxLTQwNzMtOTFkZi1kMDRjZWQ1Y2FhZDkiLCJleHAiOjE3MzIyOTU2NzIsInVzZXJuYW1lIjoidXNlcjEwIiwicm9sZSI6InVzZXIifQ.WoyMCh2y6AI75zF9B2XKTp9aXHflACZyn3Gw9DtMAGg",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://localhost:8080/account_management/delete_user_account/user10",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"account_management",
						"delete_user_account",
						"user10"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /account_management/logout 200 OK",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTczMjI5NTQ1NCwianRpIjoiMmI2NTg4MjMtYTc1ZC00ZjNhLWE5NTEtYjBkMzI5YWI3MzFhIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6Ik5vbmUiLCJuYmYiOjE3MzIyOTU0NTQsImNzcmYiOiIyOTZkOTc3Ny1jZTFiLTQ1MjMtYjU0Yi0xY2MxYWQ5M2MxNDAiLCJleHAiOjE3MzIyOTkwNTQsInVzZXJuYW1lIjoiYWRtaW4xIiwicm9sZSI6ImFkbWluIn0.0YPj-hQn829fCe0gfeInexQmx1XjazzFXeV08IrIs4Q",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"admin1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8080/account_management/logout",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"account_management",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH /account_management/admin/modify_user 200 OK",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTczMjI5NTY1MywianRpIjoiMjYwMjBhNDItNDI2Ni00N2RhLTg3M2QtMGRlZTQxMWMzNjA2IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6Ik5vbmUiLCJuYmYiOjE3MzIyOTU2NTMsImNzcmYiOiIwOTY4ZGYzZS0zYzg0LTRhYTEtYTFkMC1jMmJhZDQyODEwOGMiLCJleHAiOjE3MzIyOTkyNTMsInVzZXJuYW1lIjoiYWRtaW4xIiwicm9sZSI6ImFkbWluIn0.1BMYeO12VLZunFr3xeRE99CHy6rRCR-N_FFQnIoN1ks",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"user1\",\r\n    \"new_currency\":840\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8081/account_management/admin/modify_user",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"account_management",
						"admin",
						"modify_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH /account_management/modify_user_account 200 OK Copy",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTczMjI5NTY1MywianRpIjoiMjYwMjBhNDItNDI2Ni00N2RhLTg3M2QtMGRlZTQxMWMzNjA2IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6Ik5vbmUiLCJuYmYiOjE3MzIyOTU2NTMsImNzcmYiOiIwOTY4ZGYzZS0zYzg0LTRhYTEtYTFkMC1jMmJhZDQyODEwOGMiLCJleHAiOjE3MzIyOTkyNTMsInVzZXJuYW1lIjoiYWRtaW4xIiwicm9sZSI6ImFkbWluIn0.1BMYeO12VLZunFr3xeRE99CHy6rRCR-N_FFQnIoN1ks",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"user1\",\r\n    \"new_password\":\"prova1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8081/account_management/modify_user_account",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"account_management",
						"modify_user_account"
					]
				}
			},
			"response": []
		},
		{
			"name": "/account_management/get_currency 200 OK",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"user_id = Math.floor(Math.random() * 10) + 1;\r",
							"pm.environment.set('user_id', user_id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Requests header contains Authorization\", function() {\r",
							"    pm.request.to.have.header('Authorization');\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains points\", function() {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('points');\r",
							"});\r",
							"\r",
							"pm.test(\"Points is an array\", function() {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.points).to.be.an('array');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "jwt",
					"jwt": [
						{
							"key": "payload",
							"value": "{\r\n    \"sub\": \"{{user_id}}\",\r\n    \"role\": \"user\"\r\n}",
							"type": "string"
						},
						{
							"key": "header",
							"value": "{\r\n  \"alg\": \"HS256\",\r\n  \"typ\": \"JWT\"\r\n}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "secret",
							"value": "JwtGACHA2425",
							"type": "string"
						},
						{
							"key": "algorithm",
							"value": "HS256",
							"type": "string"
						},
						{
							"key": "isSecretBase64Encoded",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "headerPrefix",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "queryParamKey",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:8080/account_management/get_currency",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"account_management",
						"get_currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "/account_management/currency 200 OK",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"user_id = Math.floor(Math.random() * 10) + 1;\r",
							"currency = 500 + Math.floor(Math.random() * 600);\r",
							"\r",
							"pm.environment.set('user_id', user_id);\r",
							"pm.environment.set('currency', currency);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Request header contains Authorization\", function() {\r",
							"    pm.request.to.have.header('Authorization');\r",
							"});\r",
							"\r",
							"pm.test(\"Request body contains currency\", function() {\r",
							"    const body = pm.request.body.raw;\r",
							"    const jsonBody = JSON.parse(body);\r",
							"    pm.expect(jsonBody).to.have.property('currency');\r",
							"})\r",
							"\r",
							"pm.test(\"Response contains field\", function() {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('success');\r",
							"});\r",
							"\r",
							"pm.test(\"Response body matches expected result\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    var expectedResponse = \"Currency updated\";\r",
							"    pm.expect(jsonData.success).to.eql(expectedResponse);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "jwt",
					"jwt": [
						{
							"key": "payload",
							"value": "{\r\n    \"sub\": \"{{user_id}}\",\r\n    \"role\": \"user\"\r\n}",
							"type": "string"
						},
						{
							"key": "header",
							"value": "{\r\n  \"alg\": \"HS256\",\r\n  \"typ\": \"JWT\"\r\n}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "secret",
							"value": "JwtGACHA2425",
							"type": "string"
						},
						{
							"key": "algorithm",
							"value": "HS256",
							"type": "string"
						},
						{
							"key": "isSecretBase64Encoded",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "headerPrefix",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "queryParamKey",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"currency\": {{currency}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8080/account_management/currency",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"account_management",
						"currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "/account_management/get_username 200 OK",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"admin_id = 1;\r",
							"pm.environment.set('admin_id', admin_id);\r",
							"\r",
							"// IDs\r",
							"const ids = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r",
							"\r",
							"pm.environment.set('ids', JSON.stringify(ids));\r",
							"\r",
							"console.log(ids);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Request header contains Authorization\", function() {\r",
							"    pm.request.to.have.header('Authorization');\r",
							"});\r",
							"\r",
							"pm.test(\"Response has field\", function() {\r",
							"    pm.expect(pm.response.json()).to.have.property('success');\r",
							"});\r",
							"\r",
							"pm.test(\"Success is an array\", function() {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.success).to.be.an('array');\r",
							"});\r",
							"\r",
							"pm.test(\"Each value contains fields\", function() {\r",
							"    const jsonData = pm.response.json().success;\r",
							"    jsonData.forEach((item) => {\r",
							"        pm.expect(item).to.have.property('id');\r",
							"        pm.expect(item).to.have.property('username');\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "jwt",
					"jwt": [
						{
							"key": "payload",
							"value": "{\r\n    \"sub\": \"{{admin_id}}\",\r\n    \"role\": \"admin\"\r\n}",
							"type": "string"
						},
						{
							"key": "header",
							"value": "{\r\n  \"alg\": \"HS256\",\r\n  \"typ\": \"JWT\"\r\n}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "secret",
							"value": "JwtGACHA2425",
							"type": "string"
						},
						{
							"key": "algorithm",
							"value": "HS256",
							"type": "string"
						},
						{
							"key": "isSecretBase64Encoded",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "headerPrefix",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "queryParamKey",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"ids\": {{ids}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:8081/account_management/get_username",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"account_management",
						"get_username"
					]
				}
			},
			"response": []
		}
	]
}