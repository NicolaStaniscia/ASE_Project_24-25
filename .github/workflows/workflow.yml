name: Run Postman Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  postman-tests:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18  

      # Step 3: Install Newman
      - name: Install Newman
        run: npm install -g newman

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 4: Build docker compose
      - name: Build the application
        run: |
          cd src/
          docker compose up --build -d

      # Step 5: Build docker compose
      - name: Crea certificati TLS
        run: |
          echo "${{ secrets.TLS_CLIENT_CERT }}" > client-cert.pem
          echo "${{ secrets.TLS_CLIENT_KEY }}" > client-key.pem

      # Step 6: Sleep per configurazione
      - name: Sleep per configurazione DB
        run: sleep 30

      # Step 7: Run Newman with the Postman collection
      - name: Run Postman tests users
        run: |
          newman run ./docs/postman/Integration_tests/Account_Management_Integration_tests_user.postman_collection.json \
            --delay-request 500 \
            --ssl-client-cert client-cert.pem \
            --ssl-client-key client-key.pem \
            --insecure \
            --reporters cli,junit \
            --reporter-junit-export users-results.html
        continue-on-error: true
  
      # Step 8: Run Newman with the Postman collection
      - name: Run Postman tests collection
        run: |
          newman run ./docs/postman/Integration_tests/Collection_Integrazione.postman_collection.json \
            --delay-request 500 \
            --ssl-client-cert client-cert.pem \
            --ssl-client-key client-key.pem \
            --insecure \
            --reporters cli,junit \
            --reporter-junit-export collection-results.html
        continue-on-error: true

      # Step 9: Run Newman with the Postman collection
      - name: Run Postman tests market
        run: |
          newman run ./docs/postman/Integration_tests/Market_Tests_Integration.postman_collection.json \
            --delay-request 500 \
            --ssl-client-cert client-cert.pem \
            --ssl-client-key client-key.pem \
            --insecure \
            --reporters cli,junit \
            --reporter-junit-export market-results.html
        continue-on-error: true

      # Step 10: Upload test results (opzionale, per visibilit√†)
      - name: Upload users results
        uses: actions/upload-artifact@v4
        with:
          name: users-test-results
          path: users-results.html

      - name: Upload collection results
        uses: actions/upload-artifact@v4
        with:
          name: collection-test-results
          path: collection-results.html
        
      - name: Upload market results
        uses: actions/upload-artifact@v4
        with:
          name: market-test-results
          path: market-results.html
