events {}

http {
    # Server user
    server {
        listen 443 ssl;

        ssl_certificate /run/secrets/user_api_cert;  # /etc/nginx/certs/cert.pem;
        ssl_certificate_key /run/secrets/user_api_key;  # /etc/nginx/certs/key.pem;

        location /auction_market/ {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;

            proxy_pass https://auction_market:5000/auction_market/;
        }

        location /trading_history/ {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;

            proxy_pass https://trading_history:5000/trading_history/;
        }

        # ! COMMON ENDPOINTS (system collection)
        location /system_collection {
            error_page 401 = /unauthorized;
            error_page 403 = /forbidden;

            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;

            proxy_pass https://see_gacha_collection:5007;
            proxy_set_header Host $host;  # Keep original host
            proxy_set_header X-Forwarded-Proto $scheme;  # Add protocol (http/https)
        }

        # ! USER ENDPOINTS
        # * User collection
        location /collection {
            error_page 401 = /unauthorized;
            error_page 403 = /forbidden;

            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;

            # Set config
            proxy_set_header Authorization $http_authorization;
            proxy_set_header Host $host;  # Keep original host
            proxy_set_header X-Forwarded-Proto $scheme;  # Add protocol (http/https)
            
            # Forward request
            proxy_pass https://see_gacha_collection:5007;
        }

        # * Roll a gacha
        location /roll {
            error_page 401 = /unauthorized;
            error_page 403 = /forbidden;

            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
            
            # Set config
            proxy_set_header Authorization $http_authorization;
            proxy_set_header Host $host;  # Keep original host
            proxy_set_header X-Forwarded-Proto $scheme;  # Add protocol (http/https)
            
            proxy_pass https://roll_gacha:5009;
        }

        location /account_management/ {

            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
            
            # Blocco delle rotte specifiche
            location ~* ^/account_management/admin {
                return 403 '{"error": "Forbidden: access to admin endpoints is not allowed"}';
                default_type application/json;
            }

            proxy_pass https://account_management:5000;
        }

        # ! ERRORS
        location = /forbidden {
            return 403 '{"error": "Forbidden"}';
            default_type application/json;
        }

        location = /unauthorized {
            return 401 '{"error": "Unauthorized}';
            default_type application/json;
        }

    }

    # Server admin
    server {
        listen 444 ssl;

        ssl_certificate /run/secrets/admin_api_cert;  # /etc/nginx/certs/cert.pem;
        ssl_certificate_key /run/secrets/admin_api_key;  # /etc/nginx/certs/key.pem;

        location /auction_market/ {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;

            proxy_pass https://auction_market:5000/auction_market/;
        }

        location /trading_history/ {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
            
            proxy_pass https://trading_history:5000/trading_history/;
        }

        # ! COMMON ENDPOINTS (system collection)
        location /system_collection {
            error_page 401 = /unauthorized;
            error_page 403 = /forbidden;

            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;

            proxy_set_header Host $host;  # Keep original host
            proxy_set_header X-Forwarded-Proto $scheme;  # Add protocol (http/https)

            # Forward request
            proxy_pass https://see_gacha_collection:5007;
        }

        # ! ADMIN ENDPOINTS
        # * Check users collection
        location /admin/collections {
            error_page 401 = /unauthorized;
            error_page 403 = /forbidden;

            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;

            # Set config
            proxy_set_header Authorization $http_authorization;
            proxy_set_header Host $host;  # Keep original host
            proxy_set_header X-Forwarded-Proto $scheme;  # Add protocol (http/https)
            
            # Forward request
            proxy_pass https://see_gacha_collection:5007;
        }

        # * Edit collection
        location /admin/edit {
            error_page 401 = /unauthorized;
            error_page 403 = /forbidden;

            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
            
            # Set config
            proxy_set_header Authorization $http_authorization;
            proxy_set_header Host $host;  # Keep original host
            proxy_set_header X-Forwarded-Proto $scheme;  # Add protocol (http/https)
            
            proxy_pass https://edit_gacha_collection:5008;
        }

        location /account_management/ {

            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
            
            proxy_pass https://account_management:5000;
        }

        # ! ERRORS
        location = /forbidden {
            return 403 '{"error": "Forbidden"}';
            default_type application/json;
        }

        location = /unauthorized {
            return 401 '{"error": "Unauthorized}';
            default_type application/json;
        }

    }
}
